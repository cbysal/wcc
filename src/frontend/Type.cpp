#include "Type.h"

const unordered_map<Type, string> TYPE_STR = {
    {ADD, "ADD"},
    {ARRAY, "ARRAY"},
    {ASSIGN, "ASSIGN"},
    {ASSIGN_STMT, "ASSIGN_STMT"},
    {BEQ, "BEQ"},
    {BGE, "BGE"},
    {BGT, "BGT"},
    {BINARY_EXP, "BINARY_EXP"},
    {BLANK_STMT, "BLANK_STMT"},
    {BLE, "BLE"},
    {BLOCK, "BLOCK"},
    {BLT, "BLT"},
    {BNE, "BNE"},
    {BREAK, "BREAK"},
    {BREAK_STMT, "BREAK_STMT"},
    {CALL, "CALL"},
    {COMMA, "COMMA"},
    {CONST, "CONST"},
    {CONST_DEF, "CONST_DEF"},
    {CONST_INIT_VAL, "CONST_INIT_VAL"},
    {CONTINUE, "CONTINUE"},
    {CONTINUE_STMT, "CONTINUE_STMT"},
    {DIV, "DIV"},
    {ELSE, "ELSE"},
    {EQ, "EQ"},
    {ERR, "ERR"},
    {EXP_STMT, "EXP_STMT"},
    {FLOAT, "FLOAT"},
    {FLOAT_LITERAL, "FLOAT_LITERAL"},
    {FUNC, "FUNC"},
    {FUNC_CALL, "FUNC_CALL"},
    {FUNC_DEF, "FUNC_DEF"},
    {FUNC_END, "FUNC_END"},
    {FUNC_PARAM, "FUNC_PARAM"},
    {GE, "GE"},
    {GLOBAL_VAR, "GLOBAL_VAR"},
    {GLOBAL_VAR_DEF, "GLOBAL_VAR_DEF"},
    {GOTO, "GOTO"},
    {GT, "GT"},
    {ID, "ID"},
    {IF, "IF"},
    {IF_STMT, "IF_STMT"},
    {INIT_VAL, "INIT_VAL"},
    {INT, "INT"},
    {INT_LITERAL, "INT_LITERAL"},
    {LABEL_WHILE_BEGIN, "LABEL_WHILE_BEGIN"},
    {LABEL_WHILE_END, "LABEL_WHILE_END"},
    {LB, "LB"},
    {LC, "LC"},
    {LE, "LE"},
    {LOAD, "LOAD"},
    {LOCAL, "LOCAL"},
    {LOCAL_VAR, "LOCAL_VAR"},
    {LOCAL_VAR_DEF, "LOCAL_VAR_DEF"},
    {LP, "LP"},
    {LT, "LT"},
    {L_AND, "L_AND"},
    {L_NOT, "L_NOT"},
    {L_OR, "L_OR"},
    {L_VAL, "L_VAL"},
    {MINUS, "MINUS"},
    {MOD, "MOD"},
    {MOV, "MOV"},
    {MUL, "MUL"},
    {NE, "NE"},
    {NEG, "NEG"},
    {PARAM, "PARAM"},
    {PLT, "PLT"},
    {PLUS, "PLUS"},
    {POP, "POP"},
    {PUSH, "PUSH"},
    {RB, "RB"},
    {RC, "RC"},
    {RETURN, "RETURN"},
    {RETURN_STMT, "RETURN_STMT"},
    {ROOT, "ROOT"},
    {RP, "RP"},
    {SEMICOLON, "SEMICOLON"},
    {STORE, "STORE"},
    {SUB, "SUB"},
    {SYMBOL, "SYMBOL"},
    {IR_OFFSET, "IR_OFFSET"},
    {IR_T, "IR_T"},
    {TEMP, "TEMP"},
    {UNARY_EXP, "UNARY_EXP"},
    {VAL, "VAL"},
    {VOID, "VOID"},
    {WHILE, "WHILE"},
    {WHILE_STMT, "WHILE_STMT"}};
